doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Top-Level Awaiting for Godot

    link(rel='stylesheet', type='text/css', href='build/build.css')

  style.
    .hello {
      background-image: url('images/hello-tharr.gif')
    }
    .graph {
      background-image: url('images/graph.jpg')
    }
    .pre-one {
      background-image: url('images/graph-preorder-1.jpg')
    }
    .pre-two {
      background-image: url('images/graph-preorder-2.jpg')
    }
    .pre-three {
      background-image: url('images/graph-preorder-3.jpg')
    }
    .pre-four {
      background-image: url('images/graph-preorder-4.jpg')
    }
    .pre-five {
      background-image: url('images/graph-preorder-5.jpg')
    }
    .post-one {
      background-image: url('images/graph-postorder-1.jpg')
    }
    .post-two {
      background-image: url('images/graph-postorder-2.jpg')
    }
    .post-three {
      background-image: url('images/graph-postorder-3.jpg')
    }
    .post-four {
      background-image: url('images/graph-postorder-4.jpg')
    }
    .post-five {
      background-image: url('images/graph-postorder-5.jpg')
    } 
    .godot {
      background-image: url('images/godot-waiting.gif')
    }
    .dontstop {
      background-image: url('images/dontstop.jpg')
    }
    .cant-do {
      background-image: url('images/cant-do.gif')
    }
    .tiny-flip {
      background-image: url('images/tiny-flip.gif')
    }

  body

    article

      section(data-bespoke-backdrop='godot')
        h2 Top-Level Awaiting
        h2 For Godot
        h3 With your host
        h4
          a(href='https://twitter.com/MylesBorins') @MylesBorins
        p  DotJS 2018
        
      section(data-bespoke-backdrop='hello')
        h1 Bonjour!
        
      section
        h1 My Name is Myles
        img.headroom(src='images/me.jpg' alt='itsa me!' width='200px' height='200px')
      
      section
        h3 I am gainfully employed by Google as a Developer Advocate
        h4 Focusing on the Node.js ecosystem and GCP
        
        img(src='images/gcp.png' alt='Google Cloud Platform' style='background-color:white;')
        
        h5.headroom The opinions expressed in this talk are solely my own

      section
        h1 Chapter One

      section
        h2 Asynchronicity
        h2 is hard

      section
        h3 From the beginning of time (1995)
        h2 We had callbacks in JavaScript

      section.small-code
        pre
          code.language-javascript.
            a((aa) => {
                b(aa, (bb) => {
                    c(bb, (cc) => {
                        d(cc, (dd) => {
                            e(dd, (ee) => {
                                f(ee, (OMG) => {
                                    throw 'me into the abyss';
                                });
                            });
                        });
                    });
                });
            });

      section(data-bespoke-backdrop='dontstop')
        h2 Don't stop,
        h2 don't stop the thread

      section
        h2 Promises 
        h3 Made it into the language ~20 years later in 2014

      section.small-code
        pre
          code.language-javascript.
            a.then((aa) => {
              return b(aa);
            }),then((bb) => {
              return c(bb);
            }).then((cc) => {
              return d(cc);
            }).then((OMG) => {
              throw 'me into the abyss';
            }).catch((e) => {
              console.log('I got chu bae');
            });

      section
        h2 Controversial?

      section
        h2 Yes!

      section
        h2 Better?

      section
        h2 Depends who you ask

      section
        h2 Async / Await
        h3 Arrived in December of 2016

      section.small-code
        pre
          code.language-javascript.
            (async function main () {
              try {
                const aa = await a();
                const bb = await b(aa);
                const cc = await c(bb);
                const OMG = await d(cc);
                throw 'me into the absyss';
              }
              catch (e) {
                console.log('never mind');
              }
            }());

      section
        h2 Controversial?

      section
        h2 Nope.

      section
        h2 Better?

      section
        h2 Definitely!

      section
        h2 Can we improve it?

      section
        h2 I think so!

      section
        h1 Chapter 2

      section(data-bespoke-backdrop='cant-do')
        h2 Don't tell me
        h2 what I can't do
      
      section
        h2 February 21 2017
        h3 Node.js 7.6.0 is release
        h4 It includes V8 5.5
        h3 which has support for async / await

      section
        h2 I was really excited to use await until...

      section
        img.headroom(src="images/throw.png" alt="error message when trying to use Top-Level Await today"  width='60%')

      section(data-bespoke-backdrop='tiny-flip')

      section
        h2 May 31 2017
        h3 My First attempt to make TLA work in node
        img.headroom(src="images/first-attempt.png" alt="a naive node patch to make TLA work that broke everything"  width='40%')

      section
        h2 Spoiler: It Didn't

      section
        h1 Chapter 2

      section
        h2 Top-level await
        h2 is a footgun ðŸ‘£ðŸ”«

      section
        h3
          a(href="https://gist.github.com/Rich-Harris/0b6f317657f5167663b493c722647221") https://gist.github.com/Rich-Harris/0b6f317657f5167663b493c722647221

      section
        h1 Chapter Three

      section
        h2 A history lesson

      section
        h2 Top-Level await was always being considered
        h3 while async / await was being standardized

      section
        h3
          a(href="http://github.com/tc39/agendas/") http://github.com/tc39/agendas/

      section
        h2 Some quick history of async / await
        ul
          li.hide
          li originally brought to TC39 in January of 2014
          li In April 2014 `await` keyword was reserved in the module goal
          li July 2015 `async` / `await` moved to stage two
          li it was decided to delay decision about Top-Level await at that time

      section
        h2 Let's unpack that

      section
        h1 TC39

      section
        h1 Stage process

      section
        h1 Module Goal

      //- section
      //-   h1 Callbacks
      //-
      //- section.small-code
      //-   pre
      //-     code.language-javascript.
      //-       request('https://nodejs.org/download/release/index.json', {
      //-         json: true
      //-       }, function (error, response, body) {
      //-         if (error) {
      //-           console.error(error);
      //-           return
      //-         }
      //-         body.sort(sortDate);
      //-         const {version, date} = body[0];
      //-         console.log(`The latest release of node is ${version}.\n`
      //-           + `It was released on ${date}.`);
      //-       });
      //-
      //- section
      //-   h1 Promises
      //-
      //- section.small-code
      //-   pre
      //-     code.language-javascript.
      //-       fetch('https://nodejs.org/download/release/index.json')
      //-         .then(response => response.json())
      //-         .then(json => {
      //-           json.sort(sortDate);
      //-           const {version, date} = json[0];
      //-           console.log(`The latest release of node is ${version}.\n`
      //-             + `It was released on ${date}.`);
      //-         })
      //-         .catch(e => console.error(e));
      //-
      //- section
      //-   h1 Async / Await
      //-
      //- section.small-code
      //-   pre
      //-     code.language-javascript.
      //-       async function main () {
      //-         const response =
      //-           await fetch('https://nodejs.org/download/release/index.json');
      //-         const json = await response.json();
      //-         json.sort(sortDate);
      //-         const {version, date} = json[0];
      //-         console.log(`The latest release of node is ${version}.\n`
      //-           + `It was released on ${date}.`);
      //-       }
      //-
      //-       main()
      //-         .catch(e => console.error(e));
      //-
      //- section
      //-   h1 Top-Level Await
      //-
      //- section.small-code
      //-   pre
      //-     code.language-javascript.
      //-       const response =
      //-         await fetch('https://nodejs.org/download/release/index.json');
      //-       const json = await response.json();
      //-       json.sort(sortDate);
      //-       const {version, date} = json[0];
      //-       console.log(`The latest release of node is ${version}.\n`
      //-         + `It was released on ${date}.`);

      section
        h3 ESModules specify
        h2 Asynchronous Load
        h2 +
        h2 Synchronous Execution

      section
        h2 Load
        ul
          li.hide
          li Fetch source texts for *all* the module graph
          li Resolve specifiers within source texts

      section
        h2 Link
        ul
          li.hide
          li Module Graph must be in memory
          li Executed in pre-order traversal (Root, Left, Right)

      section(data-bespoke-backdrop='graph')
        //- img.headroom(src='images/graph.jpg' alt='A graph. Root depends on A and B. A depends on C and D.' width='60%')

      section(data-bespoke-backdrop='pre-one')
        //- img.headroom(src='images/graph-preorder-1.jpg' alt='first node travelled to' width='60%')
      section(data-bespoke-backdrop='pre-two')
        //- img.headroom(src='images/graph-preorder-2.jpg' alt='second node travelled to' width='60%')
      section(data-bespoke-backdrop='pre-three')
        //- img.headroom(src='images/graph-preorder-3.jpg' alt='third node travelled to' width='60%')
      section(data-bespoke-backdrop='pre-four')
        //- img.headroom(src='images/graph-preorder-4.jpg' alt='fourth node travelled to' width='60%')
      section(data-bespoke-backdrop='pre-five')
        //- img.headroom(src='images/graph-preorder-5.jpg' alt='fifth node travelled to' width='60%')
      section
        h2 Execution
        ul
          li.hide
          li Requires linked be completed
          li Done in post-order traversal (Left, Right, Root)

      section(data-bespoke-backdrop='graph')
      section(data-bespoke-backdrop='post-one')
      section(data-bespoke-backdrop='post-two')
      section(data-bespoke-backdrop='post-three')
      section(data-bespoke-backdrop='post-four')
      section(data-bespoke-backdrop='post-five')

      section
        h2 Top-Level Await
        h3 could change synchronous execution guarantee
        h4 come ask me about this later

      section
        h2 Thank You
        img.headroom(src='images/best-gif-evar.gif' alt='a surfing puppy' width='20%')
        h4 @MylesBorins

    script(src='build/build.js')
